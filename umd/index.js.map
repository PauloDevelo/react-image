{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport {\r\n  node,\r\n  func,\r\n  oneOfType,\r\n  string,\r\n  array,\r\n  bool,\r\n  instanceOf\r\n} from 'prop-types'\r\n\r\nconst cache = {}\r\nconst imgPropTypes = {\r\n  loader: node,\r\n  unloader: node,\r\n  decode: bool,\r\n  crossorigin: string,\r\n  src: oneOfType([string, array]),\r\n  container: func,\r\n  loaderContainer: func,\r\n  unloaderContainer: func\r\n}\r\n\r\nif (process.env.NODE_ENV != 'production' && process.env.NODE_ENV != 'test') {\r\n  imgPropTypes.containermockImage = instanceOf(Image) //used for testing only\r\n}\r\n\r\nclass Img extends Component {\r\n  static propTypes = imgPropTypes\r\n\r\n  static defaultProps = {\r\n    loader: false,\r\n    unloader: false,\r\n    decode: true,\r\n    src: [],\r\n    // by default, just return what gets sent in. Can be used for advanced rendering\r\n    // such as animations\r\n    container: x => x\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // default loader/unloader container to just container. If no container was set\r\n    // this will be a noop\r\n    this.loaderContainer = props.loaderContainer || props.container\r\n    this.unloaderContainer = props.unloaderContainer || props.container\r\n\r\n    this.sourceList = this.srcToArray(this.props.src)\r\n\r\n    // check cache to decide at which index to start\r\n    for (let i = 0; i < this.sourceList.length; i++) {\r\n      // if we've never seen this image before, the cache wont help.\r\n      // no need to look further, just start loading\r\n      /* istanbul ignore else */\r\n      if (!(this.sourceList[i] in cache)) break\r\n\r\n      // if we have loaded this image before, just load it again\r\n      /* istanbul ignore else */\r\n      if (cache[this.sourceList[i]] === true) {\r\n        this.state = {currentIndex: i, isLoading: false, isLoaded: true}\r\n        return\r\n      }\r\n    }\r\n\r\n    this.state = this.sourceList.length\r\n      ? // 'normal' opperation: start at 0 and try to load\r\n        {currentIndex: 0, isLoading: true, isLoaded: false}\r\n      : // if we dont have any sources, jump directly to unloaded\r\n        {isLoading: false, isLoaded: false}\r\n  }\r\n\r\n  srcToArray = src => (Array.isArray(src) ? src : [src]).filter(x => x)\r\n\r\n  onLoad = () => {\r\n    cache[this.sourceList[this.state.currentIndex]] = true\r\n    /* istanbul ignore else */\r\n    if (this.i) this.setState({isLoaded: true})\r\n  }\r\n\r\n  onError = () => {\r\n    cache[this.sourceList[this.state.currentIndex]] = false\r\n    // if the current image has already been destroyed, we are probably no longer mounted\r\n    // no need to do anything then\r\n    /* istanbul ignore else */\r\n    if (!this.i) return false\r\n\r\n    // before loading the next image, check to see if it was ever loaded in the past\r\n    for (\r\n      var nextIndex = this.state.currentIndex + 1;\r\n      nextIndex < this.sourceList.length;\r\n      nextIndex++\r\n    ) {\r\n      // get next img\r\n      let src = this.sourceList[nextIndex]\r\n\r\n      // if we have never seen it, its the one we want to try next\r\n      if (!(src in cache)) {\r\n        this.setState({currentIndex: nextIndex})\r\n        break\r\n      }\r\n\r\n      // if we know it exists, use it!\r\n      if (cache[src] === true) {\r\n        this.setState({\r\n          currentIndex: nextIndex,\r\n          isLoading: false,\r\n          isLoaded: true\r\n        })\r\n        return true\r\n      }\r\n\r\n      // if we know it doesn't exist, skip it!\r\n      /* istanbul ignore else */\r\n      if (cache[src] === false) continue\r\n    }\r\n\r\n    // currentIndex is zero bases, length is 1 based.\r\n    // if we have no more sources to try, return - we are done\r\n    if (nextIndex === this.sourceList.length)\r\n      return this.setState({isLoading: false})\r\n\r\n    // otherwise, try the next img\r\n    this.loadImg()\r\n  }\r\n\r\n  loadImg = () => {\r\n    if (process.env.NODE_ENV != 'production') {\r\n      this.i = this.props.mockImage || new Image()\r\n    } else {\r\n      this.i = new Image()\r\n    }\r\n    this.i.src = this.sourceList[this.state.currentIndex]\r\n\r\n    if (this.props.crossorigin) {\r\n      this.i.crossOrigin = this.props.crossorigin\r\n    }\r\n\r\n    if (this.props.decode && this.i.decode) {\r\n      this.i\r\n        .decode()\r\n        .then(this.onLoad)\r\n        .catch(this.onError)\r\n    } else {\r\n      this.i.onload = this.onLoad\r\n      this.i.onerror = this.onError\r\n    }\r\n  }\r\n\r\n  unloadImg = () => {\r\n    this.i.onerror = null\r\n    this.i.onload = null\r\n\r\n    // abort any current downloads https://github.com/mbrevda/react-image/pull/223\r\n    this.i.src = ''\r\n\r\n    try {\r\n      delete this.i.src\r\n    } catch (e) {\r\n      // On Safari in Strict mode this will throw an exception,\r\n      //  - https://github.com/mbrevda/react-image/issues/187\r\n      // We don't need to do anything about it.\r\n    }\r\n    delete this.i\r\n  }\r\n\r\n  componentDidMount() {\r\n    // kick off process\r\n    /* istanbul ignore else */\r\n    if (this.state.isLoading) this.loadImg()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // ensure that we dont leave any lingering listeners\r\n    /* istanbul ignore else */\r\n    if (this.i) this.unloadImg()\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.loaderContainer = nextProps.loaderContainer || nextProps.container\r\n    this.unloaderContainer = nextProps.unloaderContainer || nextProps.container\r\n\r\n    let src = this.srcToArray(nextProps.src)\r\n\r\n    let srcAdded = src.filter(s => this.sourceList.indexOf(s) === -1)\r\n    let srcRemoved = this.sourceList.filter(s => src.indexOf(s) === -1)\r\n\r\n    // if src prop changed, restart the loading process\r\n    if (srcAdded.length || srcRemoved.length) {\r\n      this.sourceList = src\r\n\r\n      // if we dont have any sources, jump directly to unloader\r\n      if (!src.length) return this.setState({isLoading: false, isLoaded: false})\r\n      this.setState(\r\n        {currentIndex: 0, isLoading: true, isLoaded: false},\r\n        this.loadImg\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // set img props as rest\r\n    const {\r\n      container,\r\n      loader,\r\n      unloader,\r\n\r\n      // props to exclude from the rest property\r\n      src,\r\n      decode,\r\n      loaderContainer,\r\n      unloaderContainer,\r\n      mockImage,\r\n\r\n      ...rest\r\n    } = this.props //eslint-disable-line\r\n\r\n    // if we have loaded, show img\r\n    if (this.state.isLoaded) {\r\n      const imgProps = {\r\n        ...{src: this.sourceList[this.state.currentIndex]},\r\n        ...rest\r\n      }\r\n\r\n      return container(<img {...imgProps} />)\r\n    }\r\n\r\n    // if we are still trying to load, show img and a loader if requested\r\n    if (!this.state.isLoaded && this.state.isLoading) {\r\n      return loader ? this.loaderContainer(loader) : null\r\n    }\r\n\r\n    // if we have given up on loading, show a place holder if requested, or nothing\r\n    /* istanbul ignore else */\r\n    if (!this.state.isLoaded && !this.state.isLoading) {\r\n      return unloader ? this.unloaderContainer(unloader) : null\r\n    }\r\n  }\r\n}\r\n\r\nexport default Img\r\n"],"names":["cache","imgPropTypes","loader","node","unloader","decode","bool","crossorigin","string","src","oneOfType","array","container","func","loaderContainer","unloaderContainer","containermockImage","instanceOf","Image","Img","props","Array","isArray","filter","x","_this","sourceList","state","currentIndex","i","setState","isLoaded","nextIndex","length","isLoading","loadImg","mockImage","crossOrigin","then","onLoad","onError","onload","onerror","e","srcToArray","unloadImg","nextProps","srcAdded","s","_this2","indexOf","srcRemoved","rest","imgProps","React","Component","propTypes"],"mappings":"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"}