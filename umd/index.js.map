{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport {\r\n  node,\r\n  func,\r\n  oneOfType,\r\n  string,\r\n  array,\r\n  bool,\r\n  instanceOf\r\n} from 'prop-types'\r\n\r\nconst cache = {}\r\nconst imgPropTypes = {\r\n  loader: node,\r\n  unloader: node,\r\n  decode: bool,\r\n  crossorigin: string,\r\n  src: oneOfType([string, array]),\r\n  container: func,\r\n  loaderContainer: func,\r\n  unloaderContainer: func\r\n}\r\n\r\nif (process.env.NODE_ENV != 'production' && process.env.NODE_ENV != 'test') {\r\n  imgPropTypes.containermockImage = instanceOf(Image) //used for testing only\r\n}\r\n\r\nclass Img extends Component {\r\n  static propTypes = imgPropTypes\r\n\r\n  static defaultProps = {\r\n    loader: false,\r\n    unloader: false,\r\n    decode: true,\r\n    src: [],\r\n    localforage: undefined,\r\n    // by default, just return what gets sent in. Can be used for advanced rendering\r\n    // such as animations\r\n    container: x => x\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // default loader/unloader container to just container. If no container was set\r\n    // this will be a noop\r\n    this.loaderContainer = props.loaderContainer || props.container\r\n    this.unloaderContainer = props.unloaderContainer || props.container\r\n\r\n    this.sourceList = this.srcToArray(this.props.src)\r\n\r\n    // check cache to decide at which index to start\r\n    for (let i = 0; i < this.sourceList.length; i++) {\r\n      // if we've never seen this image before, the cache wont help.\r\n      // no need to look further, just start loading\r\n      /* istanbul ignore else */\r\n      if (!(this.sourceList[i] in cache)) break\r\n\r\n      // if we have loaded this image before, just load it again\r\n      /* istanbul ignore else */\r\n      if (cache[this.sourceList[i]] === true) {\r\n        this.state = {currentIndex: i, isLoading: false, isLoaded: true}\r\n        return\r\n      }\r\n    }\r\n\r\n    this.state = this.sourceList.length\r\n      ? // 'normal' opperation: start at 0 and try to load\r\n        {currentIndex: 0, isLoading: true, isLoaded: false}\r\n      : // if we dont have any sources, jump directly to unloaded\r\n        {isLoading: false, isLoaded: false}\r\n  }\r\n\r\n  getBase64Image = (img) => {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    return canvas.toDataURL(\"image/png\");\r\n  }\r\n\r\n  srcToArray = src => (Array.isArray(src) ? src : [src]).filter(x => x)\r\n\r\n  onLoad = () => {\r\n    cache[this.sourceList[this.state.currentIndex]] = true\r\n\r\n    /* istanbul ignore else */\r\n    if (this.i){\r\n      if (this.i.src === this.sourceList[this.state.currentIndex] && this.props.localforage !== undefined){\r\n        this.props.localforage.setItem(this.sourceList[this.state.currentIndex], this.getBase64Image(this.i));\r\n      }\r\n\r\n      this.setState({isLoaded: true})\r\n    } \r\n  }\r\n\r\n  onError = () => {\r\n    cache[this.sourceList[this.state.currentIndex]] = false\r\n    // if the current image has already been destroyed, we are probably no longer mounted\r\n    // no need to do anything then\r\n    /* istanbul ignore else */\r\n    if (!this.i) return false\r\n\r\n    // before loading the next image, check to see if it was ever loaded in the past\r\n    for (\r\n      var nextIndex = this.state.currentIndex + 1;\r\n      nextIndex < this.sourceList.length;\r\n      nextIndex++\r\n    ) {\r\n      // get next img\r\n      let src = this.sourceList[nextIndex]\r\n\r\n      // if we have never seen it, its the one we want to try next\r\n      if (!(src in cache)) {\r\n        this.setState({currentIndex: nextIndex})\r\n        break\r\n      }\r\n\r\n      // if we know it exists, use it!\r\n      if (cache[src] === true) {\r\n        this.setState({\r\n          currentIndex: nextIndex,\r\n          isLoading: false,\r\n          isLoaded: true\r\n        })\r\n        return true\r\n      }\r\n\r\n      // if we know it doesn't exist, skip it!\r\n      /* istanbul ignore else */\r\n      if (cache[src] === false) continue\r\n    }\r\n\r\n    // currentIndex is zero bases, length is 1 based.\r\n    // if we have no more sources to try, return - we are done\r\n    if (nextIndex === this.sourceList.length)\r\n      return this.setState({isLoading: false})\r\n\r\n    // otherwise, try the next img\r\n    this.loadImg()\r\n  }\r\n\r\n  loadImg = async () => {\r\n    const { localforage } = this.props;\r\n\r\n    if (process.env.NODE_ENV != 'production') {\r\n      this.i = this.props.mockImage || new Image()\r\n    } else {\r\n      this.i = new Image()\r\n    }\r\n\r\n    if (localforage !== undefined){\r\n      const base64Image = await localforage.getItem(this.sourceList[this.state.currentIndex]);\r\n      if (base64Image){\r\n        this.i.src = base64Image;\r\n      }\r\n      else{\r\n        this.i.src = this.sourceList[this.state.currentIndex]\r\n      }\r\n    }\r\n    else{\r\n      this.i.src = this.sourceList[this.state.currentIndex]\r\n    }\r\n\r\n    if (this.props.crossorigin) {\r\n      this.i.crossOrigin = this.props.crossorigin\r\n    }\r\n\r\n    if (this.props.decode && this.i.decode) {\r\n      try{\r\n        await this.i.decode()\r\n        this.onLoad();\r\n      }\r\n      catch(reason){\r\n        this.onError(reason)\r\n      }\r\n    } else {\r\n      this.i.onload = this.onLoad\r\n      this.i.onerror = this.onError\r\n    }\r\n  }\r\n\r\n  unloadImg = () => {\r\n    this.i.onerror = null\r\n    this.i.onload = null\r\n\r\n    // abort any current downloads https://github.com/mbrevda/react-image/pull/223\r\n    this.i.src = ''\r\n\r\n    try {\r\n      delete this.i.src\r\n    } catch (e) {\r\n      // On Safari in Strict mode this will throw an exception,\r\n      //  - https://github.com/mbrevda/react-image/issues/187\r\n      // We don't need to do anything about it.\r\n    }\r\n    delete this.i\r\n  }\r\n\r\n  componentDidMount() {\r\n    // kick off process\r\n    /* istanbul ignore else */\r\n    if (this.state.isLoading) this.loadImg()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // ensure that we dont leave any lingering listeners\r\n    /* istanbul ignore else */\r\n    if (this.i) this.unloadImg()\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.loaderContainer = nextProps.loaderContainer || nextProps.container\r\n    this.unloaderContainer = nextProps.unloaderContainer || nextProps.container\r\n\r\n    let src = this.srcToArray(nextProps.src)\r\n\r\n    let srcAdded = src.filter(s => this.sourceList.indexOf(s) === -1)\r\n    let srcRemoved = this.sourceList.filter(s => src.indexOf(s) === -1)\r\n\r\n    // if src prop changed, restart the loading process\r\n    if (srcAdded.length || srcRemoved.length) {\r\n      this.sourceList = src\r\n\r\n      // if we dont have any sources, jump directly to unloader\r\n      if (!src.length) return this.setState({isLoading: false, isLoaded: false})\r\n      this.setState(\r\n        {currentIndex: 0, isLoading: true, isLoaded: false},\r\n        this.loadImg\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // set img props as rest\r\n    const {\r\n      container,\r\n      loader,\r\n      unloader,\r\n\r\n      // props to exclude from the rest property\r\n      src,\r\n      decode,\r\n      loaderContainer,\r\n      unloaderContainer,\r\n      mockImage,\r\n\r\n      ...rest\r\n    } = this.props //eslint-disable-line\r\n\r\n    // if we have loaded, show img\r\n    if (this.state.isLoaded) {\r\n      const imgProps = {\r\n        ...{src: this.sourceList[this.state.currentIndex]},\r\n        ...rest\r\n      }\r\n\r\n      return container(<img {...imgProps} />)\r\n    }\r\n\r\n    // if we are still trying to load, show img and a loader if requested\r\n    if (!this.state.isLoaded && this.state.isLoading) {\r\n      return loader ? this.loaderContainer(loader) : null\r\n    }\r\n\r\n    // if we have given up on loading, show a place holder if requested, or nothing\r\n    /* istanbul ignore else */\r\n    if (!this.state.isLoaded && !this.state.isLoading) {\r\n      return unloader ? this.unloaderContainer(unloader) : null\r\n    }\r\n  }\r\n}\r\n\r\nexport default Img\r\n"],"names":["cache","imgPropTypes","loader","node","unloader","decode","bool","crossorigin","string","src","oneOfType","array","container","func","loaderContainer","unloaderContainer","containermockImage","instanceOf","Image","Img","props","img","canvas","document","createElement","width","height","ctx","getContext","drawImage","toDataURL","Array","isArray","filter","x","_this","sourceList","state","currentIndex","i","localforage","setItem","getBase64Image","setState","isLoaded","nextIndex","length","isLoading","loadImg","mockImage","getItem","base64Image","crossOrigin","onLoad","onError","onload","onerror","e","srcToArray","unloadImg","nextProps","srcAdded","s","_this2","indexOf","srcRemoved","rest","imgProps","React","Component","propTypes"],"mappings":"ixEAYMA,CAAK,CAAG,GACRC,CAAY,CAAG,CACnBC,MAAM,CAAEC,MADW,CAEnBC,QAAQ,CAAED,MAFS,CAGnBE,MAAM,CAAEC,MAHW,CAInBC,WAAW,CAAEC,QAJM,CAKnBC,GAAG,CAAEC,WAAAA,CAAU,CAACF,QAAD,CAASG,OAAT,CAAVD,CALc,CAMnBE,SAAS,CAAEC,MANQ,CAOnBC,eAAe,CAAED,MAPE,CAQnBE,iBAAiB,CAAEF,MARA,EAYnBZ,CAAY,CAACe,kBAAbf,CAAkCgB,YAAAA,CAAWC,KAAXD,KAG9BE,CAAAA,yBAcQC,EAAO,gBAAA,yBACXA,GADW,yBAgCF,SAACC,CAAD,CAAS,IACpBC,CAAAA,CAAM,CAAGC,QAAQ,CAACC,aAATD,CAAuB,QAAvBA,EACbD,CAAM,CAACG,KAAPH,CAAeD,CAAG,CAACI,KAFK,CAGxBH,CAAM,CAACI,MAAPJ,CAAgBD,CAAG,CAACK,MAHI,IAKpBC,CAAAA,CAAG,CAAGL,CAAM,CAACM,UAAPN,CAAkB,IAAlBA,QACVK,CAAAA,CAAG,CAACE,SAAJF,CAAcN,CAAdM,CAAmB,CAAnBA,CAAsB,CAAtBA,EAEOL,CAAM,CAACQ,SAAPR,CAAiB,WAAjBA,CAxCU,EAAA,qBA2CN,SAAAb,CAAA,QAAO,CAACsB,KAAK,CAACC,OAAND,CAActB,CAAdsB,EAAqBtB,CAArBsB,CAA2B,CAACtB,CAAD,CAA5B,EAAmCwB,MAAnC,CAA0C,SAAAC,CAAA,QAAKA,CAAAA,CAA/C,CAAA,CA3CD,EAAA,iBA6CV,UAAM,CACblC,CAAK,CAACmC,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,CAAD,CAALtC,GADa,CAITmC,EAAKI,CAJI,GAKPJ,EAAKI,CAAL,CAAO9B,GAAP,GAAe0B,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,CAAf,EAA2D,SAAAH,EAAKf,KAAL,CAAWoB,WAL/D,IAMJpB,MAAMoB,YAAYC,QAAQN,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,EAA0CH,EAAKO,cAAL,CAAoBP,EAAKI,CAAzB,EANhE,GASNI,SAAS,CAACC,QAAQ,GAAT,EATH,CA7CI,EAAA,kBA0DT,UAAM,IACd5C,CAAK,CAACmC,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,CAAD,CAALtC,IAII,CAACmC,EAAKI,EAAG,aAIX,GAKI9B,CAAAA,CALJ,CAAIoC,CAAS,CAAGV,EAAKE,KAAL,CAAWC,YAAX,CAA0B,EAC1CO,CAAS,CAAGV,EAAKC,UAAL,CAAgBU,OAC5BD,CAAS,GACT,IAEIpC,EAAM0B,EAAKC,UAAL,CAAgBS,CAAhB,EAGN,EAAEpC,CAAG,GAAIT,CAAAA,CAAT,EAAiB,GACd2C,SAAS,CAACL,YAAY,CAAEO,CAAf,EADK,MALrB,IAWI7C,KAAAA,CAAK,CAACS,CAAD,WACFkC,SAAS,CACZL,YAAY,CAAEO,CADF,CAEZE,SAAS,GAFG,CAGZH,QAAQ,GAHI,MAUZ5C,KAAAA,CAAK,CAACS,CAAD,CAlCG,CAAA,MAuCVoC,CAAAA,CAAS,GAAKV,EAAKC,UAAL,CAAgBU,MAvCpB,CAwCLX,EAAKQ,QAAL,CAAc,CAACI,SAAS,GAAV,CAAd,CAxCK,QA2CTC,SArGY,EAAA,kBAwGT,qFACAR,CADA,CACgBL,EAAKf,KAAL,CAAhBoB,cAGDD,EAAIJ,EAAKf,KAAL,CAAW6B,SAAX,EAAwB,GAAI/B,CAAAA,MAKnCsB,SAAAA,0CACwBA,CAAW,CAACU,OAAZV,CAAoBL,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,CAApBE,UAApBW,CAVA,UAYCZ,EAAE9B,IADL0C,EACWA,EAGAhB,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,2BAIVC,EAAE9B,IAAM0B,EAAKC,UAAL,CAAgBD,EAAKE,KAAL,CAAWC,YAA3B,aAGXH,EAAKf,KAAL,CAAWb,gBACRgC,EAAEa,YAAcjB,EAAKf,KAAL,CAAWb,eAG9B4B,EAAKf,KAAL,CAAWf,MAAX,EAAqB8B,EAAKI,CAAL,CAAOlC,4DAEtB8B,EAAKI,CAAL,CAAOlC,MAAP,cACDgD,iEAGAC,gDAGFf,EAAEgB,OAASpB,EAAKkB,SAChBd,EAAEiB,QAAUrB,EAAKmB,iEA5IP,EAAA,oBAgJP,UAAM,GACXf,EAAEiB,QAAU,IADD,GAEXjB,EAAEgB,OAAS,IAFA,GAKXhB,EAAE9B,IAAM,EALG,IAOZ,OACK0B,CAAAA,EAAKI,CAAL,CAAO9B,GADhB,CAEE,MAAOgD,CAAP,CAAU,QAKLtB,CAAAA,EAAKI,CA9JK,EAAA,GAKZzB,gBAAkBM,CAAK,CAACN,eAANM,EAAyBA,CAAK,CAACR,SALrC,GAMZG,kBAAoBK,CAAK,CAACL,iBAANK,EAA2BA,CAAK,CAACR,SANzC,GAQZwB,WAAaD,EAAKuB,UAAL,CAAgBvB,EAAKf,KAAL,CAAWX,GAA3B,CARD,KAWZ,GAAI8B,CAAAA,CAAC,CAAG,EAAGA,CAAC,CAAGJ,EAAKC,UAAL,CAAgBU,SAI9B,EAAEX,EAAKC,UAAL,CAAgBG,CAAhB,GAAsBvC,CAAAA,CAAxB,EAJsCuC,CAAC,MAQvCvC,KAAAA,CAAK,CAACmC,EAAKC,UAAL,CAAgBG,CAAhB,CAAD,WACFF,MAAQ,CAACC,YAAY,CAAEC,CAAf,CAAkBQ,SAAS,GAA3B,CAAoCH,QAAQ,GAA5C,gBAKZP,MAAQF,EAAKC,UAAL,CAAgBU,MAAhB,EAERR,YAAY,CAAE,EAAGS,SAAS,IAAQH,QAAQ,IAFlC,EAIRG,SAAS,IAASH,QAAQ,mEAoIb,CAGd,KAAKP,KAAL,CAAWU,SAHG,EAGQ,KAAKC,OAAL,iDAGL,CAGjB,KAAKT,CAHY,EAGT,KAAKoB,SAAL,4DAGmBC,EAAW,iBACrC9C,gBAAkB8C,CAAS,CAAC9C,eAAV8C,EAA6BA,CAAS,CAAChD,SADpB,MAErCG,kBAAoB6C,CAAS,CAAC7C,iBAAV6C,EAA+BA,CAAS,CAAChD,SAFxB,IAItCH,CAAAA,CAAG,CAAG,KAAKiD,UAAL,CAAgBE,CAAS,CAACnD,GAA1B,CAJgC,CAMtCoD,CAAQ,CAAGpD,CAAG,CAACwB,MAAJxB,CAAW,SAAAqD,CAAA,QAAoC,CAAC,CAAhC,GAAAC,CAAI,CAAC3B,UAAL,CAAgB4B,OAAhB,CAAwBF,CAAxB,CAAhB,CAAArD,CAN2B,CAOtCwD,CAAU,CAAG,KAAK7B,UAAL,CAAgBH,MAAhB,CAAuB,SAAA6B,CAAA,QAAwB,CAAC,CAApBrD,GAAAA,CAAG,CAACuD,OAAJvD,CAAYqD,CAAZrD,CAA5B,CAAA,CAPyB,IAUtCoD,CAAQ,CAACf,MAATe,EAAmBI,CAAU,CAACnB,OAAQ,SACnCV,WAAa3B,EAGd,CAACA,CAAG,CAACqC,OAAQ,MAAO,MAAKH,QAAL,CAAc,CAACI,SAAS,GAAV,CAAmBH,QAAQ,GAA3B,CAAd,CAAP,MACZD,SACH,CAACL,YAAY,CAAE,CAAf,CAAkBS,SAAS,GAA3B,CAAmCH,QAAQ,GAA3C,EACA,KAAKI,0CAKF,OAeH,KAAK5B,MAZPR,CAHK,GAGLA,UACAV,CAJK,GAILA,OACAE,CALK,GAKLA,SAGAK,CARK,GAQLA,IACAJ,CATK,GASLA,OACAS,CAVK,GAULA,gBACAC,CAXK,GAWLA,kBACAkC,CAZK,GAYLA,UAEGiB,CAdE,4GAkBH,KAAK7B,KAAL,CAAWO,SAAU,IACjBuB,CAAAA,CAAQ,MACT,CAAC1D,GAAG,CAAE,KAAK2B,UAAL,CAAgB,KAAKC,KAAL,CAAWC,YAA3B,CAAN,KACA4B,SAGEtD,CAAAA,CAAS,CAACwD,eAAAA,MAAAA,CAASD,CAATC,CAAD,CAxBX,CAAA,MA4BH,CAAC,KAAK/B,KAAL,CAAWO,QAAZ,EAAwB,KAAKP,KAAL,CAAWU,SA5BhC,CA6BE7C,CAAM,CAAG,KAAKY,eAAL,CAAqBZ,CAArB,CAAH,CAAkC,IA7B1C,CAkCF,KAAKmC,KAAL,CAAWO,QAAZ,EAAyB,KAAKP,KAAL,CAAWU,SAlCjC,QAmCE3C,CAAQ,CAAG,KAAKW,iBAAL,CAAuBX,CAAvB,CAAH,CAAsC,YApPzCiE,sBAAZlD,iBAGkB,CACpBjB,MAAM,GADc,CAEpBE,QAAQ,GAFY,CAGpBC,MAAM,GAHc,CAIpBI,GAAG,CAAE,EAJe,CAKpB+B,WAAW,OALS,CAQpB5B,SAAS,CAAE,SAAAsB,CAAA,QAAKA,CAAAA,EARI,GAHlBf,EACGmD,SADHnD,CACelB"}